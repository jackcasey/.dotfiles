# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:moee-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps
#
# This file uses Coffetar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson
#
# 'atom-text-editor.vim-mode-plus.operator-pending-mode':
#   'i f':         'vim-mode-plus:inner-fold'
#
# 'atom-text-editor.vim-mode-plus:not(.insert-mode)':
#   'up':          'pane:show-previous-item'
#   'down':        'pane:show-next-item'
#   'shift-up':    'pane:move-item-left'
#   'shift-down':  'pane:move-item-right'
#   'q':           'atom-keyboard-macros-vim:toggle_record_macro_vim'
#   '@':           'atom-keyboard-macros-vim:execute_macro_vim'
#
#   ':':           'ex-mode:open'
#
#   'ctrl-i': 'cursor-history:next'
#   'ctrl-o': 'cursor-history:prev'
#
#   '-': 'toggle:there'
#
# 'atom-workspace':
#   'ctrl-c ctrl-c': 'window:close'
#
# 'atom-text-editor.vim-mode-plus.insert-mode':
#   'f d': 'vim-mode-plus:activate-normal-mode'
#   'j k': 'vim-mode-plus:activate-normal-mode'
#
# 'atom-text-editor':
#   'ctrl-k': 'vim-mode-plus-user:move-selected-text-up'
#   'ctrl-j': 'vim-mode-plus-user:move-selected-text-down'
#   'ctrl-l': 'vim-mode-plus-user:move-selected-text-right'
#   'ctrl-h': 'vim-mode-plus-user:move-selected-text-left'
