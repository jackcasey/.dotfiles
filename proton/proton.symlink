{
  ;; This is your main proton configuration file
  ;; While using proton, all atom related configuration has to go inside here
  ;; Everything that is not set up through this file will get wiped on start
  ;; We gave you some cool defaults below but if you don't like it, feel free to change :)

  ;; Layers you wish to have active
  ;; To get a list of all available layers, check github.com/dvcrn/proton/layers/
  :layers
  [
    ;; -----------------------------------
    ;; core layer. Don't remove.
    ;; -----------------------------------
    :core

    ;; -----------------------------------
    ;; tools
    ;; Get more at github.com/dvcrn/proton/tree/master/src/proton/layers/tools
    ;; -----------------------------------
    :tools/git
    :tools/linter
    :tools/todo

    ;; :tools/bookmarks
    ;; :tools/build
    ;; :tools/minimap

    ;; -----------------------------------
    ;; Languages
    ;; Get more at github.com/dvcrn/proton/tree/master/src/proton/layers/lang
    ;; -----------------------------------
    :lang/ruby
    :lang/javascript
    :lang/stylus
    :lang/markdown

    ;; :lang/clojure
    ;; :lang/python
    ;; :lang/csharp
    ;; :lang/julia
    ;; :lang/latex
    ;; :lang/elixir
    ;; :lang/rust

    ;; -----------------------------------
    ;; Frameworks
    ;; Get more at github.com/dvcrn/proton/tree/master/src/proton/layers/frameworks
    ;; -----------------------------------
    ;; :frameworks/django

    ;; -----------------------------------
    ;; etc
    ;; Get more at github.com/dvcrn/proton/tree/master/src/proton/layers/fun
    ;; -----------------------------------
    ;; :fun/power_mode
  ]

  ;; Packages that are not part of a layer. List them here as keyword
  ;; All packages will be ensured to be installed. Stuff that is not listed here
  ;; Will get uninstalled so choose wisely!
  :additional-packages
  [
    :monokai
    :cursor-history
    :atom-fuzzy-grep
    :quick-highlight
    :language-vue
    :vue2-autocomplete
    :vim-mode-plus-exchange
    :narrow
    :ex-mode
    :symbol-gen
    :rails-i18n

    ; :git-radar
    ; :rspec
    ; :language-rspec
  ]


  ;; Packages that you want to disable.
  ;; Note that packages will be removed except bundled packages.
  ;; Bundled packages will be disabled instead.
  ;; Use this configuration instead of atom's `core.disabledPackages`
  :disabled-packages [
    :relative-numbers
    :welcome
    :atomatigit
    :fixmyjs
    :ruby-test
    :pigments
    :ex-mode
    :merge-conflicts
    :advanced-open-file
    :docblockr
    :expand-region
    :tab-switcher
    :markdown-scroll-sync
    :autocomplete-ruby
    :atom-mdtoc

    ;; :autoupdate-packages
    ;; :about
  ]

  ;; Proton takes over your atom configuration. All settings that are not listed here will get wiped
  ;; Configurations are denoted as 2 element vector consisting of k/v
  ;; sub-vectors inside v will get treated like javascript arrays
  :configuration
  [
    ;; appearance
    ["editor.fontFamily" "SourceCodePro-Light"]
    ["editor.fontSize" 16]
    ["editor.preferredLineLength" 120]
    ["editor.softWrap" false]

    ;; the current default theme
    ["core.themes" ["one-dark-ui" "monokai"]]
    ["core.titleBar" "custom"]

    ["core.followSymlinks" false]
    ["core.customFileTypes" {
      "source.clojure" ["proton.symlink"]
    }]
    ["core.ignoredNames" [
      ".git"
      ".hg"
      ".svn"
      ".DS_Store"
      "._*"
      "Thumbs.db"
      "desktop.ini"
      "vendor/assets"
      "*.png"
      "*.jpg"
    ]]

    ;; proton configuration
    ["proton.core.showTabBar" true]
    ["proton.core.post-init-timeout", 500]
    ["proton.core.alwaysShowWelcomeScreen" false]

    ;; prefer classic vim mode over vim-mode-plus? Change this to :vim-mode
    ["proton.core.inputProvider" :vim-mode-plus]

    ;; defaults for lots of plugin config
    ["autocomplete-plus.backspaceTriggersAutocomplete" true]
    ["autocomplete-plus.confirmCompletion" "tab"]

    ["linter-ui-default.tooltipFollows" "Keyboard"]
    ["linter-ui-default.decorateOnTreeView" "None"]
    ["linter-rubocop.disableWhenNoConfigFile" true]
    ["linter.lintOnChangeInterval" 1500]
    ["linter.ignoreGlob" "**/@(schema|main_menu).rb"]

    ["zentabs.manualMode" false]
    ["zentabs.maximumOpenedTabs" 10]
    ["zentabs.neverCloseUnsaved" true]

    ["whitespace.ignoreWhitespaceOnCurrentLine" false]

    ["vim-mode-plus.automaticallyEscapeInsertModeOnActivePaneItemChange" true]
    ["vim-mode-plus.charactersToAddSpaceOnSurround" ["{" "}"]]
    ["vim-mode-plus.ignoreCaseForSearchCurrentWord" true]

    ["rspec.command", "bundle exec rspec"]
    ["autocomplete-paths.maxFileCount", 10000]
  ]

  ;; Don't like a keybinding or want to add something yourself? Do it here
  ;; The following example adds a category `foo-category` under <SPC>z
  ;; and adds a action under `y` with the title `execute hello`.
  ;; Upon executing, proton will dispatch the action `hello` on the current view
  ;;
  :keybindings {
    :p {:category "project"
        :y {:title "copy project path"
            :action "editor:copy-project-path",
            :target ".editor.is-focused"}
        :r {:title "go to symbol"
            :action "symbols-view:toggle-project-symbols",
            :target ".editor.is-focused"}
        :g {:title "fuzzy grep"
            :action "fuzzy-grep:toggle",
            :target ".editor.is-focused"}
        }
    :f {:category "files"
        :y {:title "copy file path"
            :action "editor:copy-path",
            :target ".editor.is-focused"}
        :t {:title "reveal in tree view"
            :action "tree-view:reveal-active-file",
            :target ".editor.is-focused"}
        :r {:title "go to symbol"
            :action "symbols-view:toggle-file-symbols",
            :target ".editor.is-focused"}
       }
    :d {:category "diff"
        :n {:title "next"
            :action "git-diff:move-to-next-diff",
            :target ".editor.is-focused"}
        :p {:title "previous"
            :action "git-diff:move-to-previous-diff",
            :target ".editor.is-focused"}
       }
    :e {:category "errors"
        :a {:title "autocorrect"
            :action "rubocop-auto-correct:current-file"
            :target ".editor.is-focused"}
       }
    :g {:category "git"
        :t {:title "panel toggle"
            :action "github:toggle-git-tab"
            :target ".editor.is-focused"}
       }
    :r {:category "rspec"
        :r {:title "run current file"
            :action "rspec:run"
            :target ".editor.is-focused"}
       }
  }

  ;; Want some custom behavior inside a certain window?
  ;; Add your own nifty things here!
  :keymaps [
    {:selector "atom-text-editor.vim-mode-plus.insert-mode" :keymap [["f d" "vim-mode-plus:activate-normal-mode"]]}
    {:selector "atom-text-editor.vim-mode-plus.insert-mode" :keymap [["j k" "vim-mode-plus:activate-normal-mode"]]}
    {:selector "atom-text-editor.vim-mode-plus.normal-mode" :keymap [["g m" "vim-mode-plus-user:quick-highlight-word"]]}
    {:selector "atom-text-editor.vim-mode-plus.normal-mode" :keymap [["_" "vim-mode-plus:replace-with-register"]]}
    {:selector "atom-text-editor.vim-mode-plus.visual-mode" :keymap [["g m" "vim-mode-plus-user:quick-highlight"]]}
    {:selector "atom-text-editor.vim-mode-plus:not(.insert-mode)" :keymap [
      ["up" "pane:show-previous-item"]
      ["g M" "quick-highlight:clear"]
      ["down" "pane:show-next-item"]
      ["ctrl-i" "cursor-history:next"]
      ["ctrl-o" "cursor-history:prev"]
    ]}
  ]
}
