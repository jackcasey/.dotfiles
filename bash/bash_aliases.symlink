# use macvim if available
command -v mvim >> /dev/null && alias v=mvim
command -v mvim >> /dev/null || alias v=vim

# go to dotfiles directory
alias gdf='cd $HOME/.dotfiles'

# Fix less ANSI / Colours
alias less="less -R"

# Ruby bundler
alias be='bundle exec'

# Rails
alias ready_test='dropdb agworld_test; DISABLE_DATABASE_ENVIRONMENT_CHECK=1 RAILS_ENV=test be rake db:setup --trace'
alias ready_dev='dropdb au_master; dropdb agworld_test; be rake db:setup --trace'
alias sub='/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl'

# Git
alias gs="git status"
alias gh="git hist"
alias gd="git diff"
alias gds="git diff --staged"
alias gpr="git pull --rebase"
alias gp="git push"
alias gitrmdel="git status | grep deleted | cut -c14- | xargs git rm"
alias gitrmdbs="git reset db/schema.rb; git checkout db/schema.rb"
alias githide='git update-index --assume-unchanged'
alias gitunhide='git update-index --no-assume-unchanged'
alias gitwhite='git diff -w --no-color | git apply --cached --ignore-whitespace'
alias bee='~/beautify_git_hash.py bee | tail -n1 | sh'
alias beef='~/beautify_git_hash.py beef | tail -n1 | sh'
alias gitpushup='git push --set-upstream origin `git symbolic-ref HEAD --short`'
# alias clean_branches='git br --merged | grep -v ^* | cut -c3- | xargs git br -d'
alias omg='sh ~/.dotfiles/bash/oh-my-git/help.sh'
alias gitrecent='for ref in $(git for-each-ref --sort=-committerdate --format="%(refname)" refs/heads/ refs/remotes ); do git log -n1 $ref --pretty=format:"%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n" | cat ; done | awk '\''! a[$0]++'\'''

# PostgreSQL
alias pgstart='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
alias pgdc='psql -c "SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = '\''agworld_test'\''"'

# Misc
alias diffmerge='/Users/jack/Applications/DiffMerge.app/Contents/MacOS/DiffMerge'
alias ws='cd ~/dev/website'
alias e='atom'
alias hh='history | grep'

alias preppy='git pull && bundle && npm prune && npm install && be rake db:migrate && ready_test'

generate_tags() {
  #do things with parameters like $1 such as
  ctags -R --languages=$1 --exclude=.git --exclude=log --exclude=coverage --exclude=tmp --exclude=vendor --exclude=node_modules .
}
alias ct=generate_tags
alias etws='ctags -e -R --languages=ruby --exclude=.git --exclude=log --exclude=coverage --exclude=tmp --exclude=vendor --exclude=node_modules .'
alias ctws='ctags -R --languages=ruby --exclude=.git --exclude=log --exclude=coverage --exclude=tmp --exclude=vendor --exclude=node_modules .'

# Combined SSH configs
alias sshsetup="cat ~/.ssh/config.d/* > ~/.ssh/config"
alias sshlist="cat ~/.ssh/config | grep ^Host | cut -c6-"
alias psqlsizes="echo 'select t1.datname AS db_name, pg_size_pretty(pg_database_size(t1.datname)) as db_size from pg_database t1 order by pg_database_size(t1.datname) desc;' | psql"

# preemptive stuff for long running command
long() {
  time $@ && say done
}

# switching rails website env
alias devus="export AGW_region=us"
alias devau="export AGW_region=au"

alias cuc="TEST_ASSETS=true NO_COVERAGE=true RAILS_ENV=test cucumber"
alias cucchrome="TEST_ASSETS=true RAILS_ENV=test JS_DRIVER=chrome be cucumber --tags @focus"
alias rsp="TEST_ASSETS=true NO_COVERAGE=true RAILS_ENV=test rspec -cfd"
alias grd="TEST_ASSETS=true RAILS_ENV=test guard"

# emacs macosx from command line
alias emacs='open -a /Applications/Emacs.app $1'

alias policeme="git status --porcelain | cut -c4- | grep '.rb' | xargs bundle exec rubocop"
alias fixme="git status --porcelain | cut -c4- | grep '.rb' | xargs bundle exec rubocop -a"

alias railsperf='egrep "(Completed 200 OK)|(Instantiation Breakdown)"'
alias uni='bundle exec unicorn -p 3000'

alias ll='ls -lahrt'

alias atomm='env -i /usr/local/bin/atom'

alias update_keyboard='cd ~/projects/controller/Keyboards && ./whitefox.bash && sleep 2 && dfu-util -D WhiteFox.gcc/kiibohd.dfu.bin'

alias myip="ifconfig | grep inet | grep broadcast | cut -d' ' -f2"
